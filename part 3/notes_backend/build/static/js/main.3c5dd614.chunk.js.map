{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","id","onClick","baseUrl","axios","get","then","response","data","newObject","post","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","initialNotes","notesToShow","filter","toggleImportanceOf","find","n","changedNote","returnedNote","map","catch","error","alert","onSubmit","e","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","addNote","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"uJAkBeA,EAhBF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,qBAAIC,UAAU,YAAd,UACGJ,EAAKK,QACN,wBACEC,GAAG,kBACHF,UAAU,0CACVG,QAAS,kBAAMN,EAAiBD,EAAKM,KAHvC,SAKGJ,Q,gBCZHM,EAAU,aAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAa9B,EAVA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,EALA,SAACP,EAAIQ,GAElB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBF,GAAMQ,GAC/BH,MAAK,SAACC,GAAD,OAAcA,EAASC,SCsE9BI,EAhFH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRC,IAAqBf,MAAK,SAACgB,GACzBP,EAASO,QAEV,IAEH,IAmBMC,EAAcL,EAChBJ,EACAA,EAAMU,QAAO,SAAC7B,GAAD,OAA6B,IAAnBA,EAAKG,aAE1B2B,EAAqB,SAACxB,GAC1B,IAAMN,EAAOmB,EAAMY,MAAK,SAACC,GAAD,OAAOA,EAAE1B,KAAOA,KAClC2B,EAAW,2BAAQjC,GAAR,IAAcG,WAAYH,EAAKG,YAEhDuB,EACUpB,EAAI2B,GACXtB,MAAK,SAACuB,GACLd,EAASD,EAAMgB,KAAI,SAACnC,GAAD,OAAWA,EAAKM,KAAOA,EAAKN,EAAOkC,SAEvDE,OAAM,SAACC,GACNC,MAAM,aAAD,OAActC,EAAKK,QAAnB,sCACLe,EAASD,EAAMU,QAAO,SAACG,GAAD,OAAOA,EAAE1B,KAAOA,UAI5C,OACE,sBAAKF,UAAU,YAAf,UACE,uCACA,8BACE,yBACEA,UAAU,4BAEVG,QAAS,kBAAMiB,GAAYD,IAH7B,kBAKQA,EAAU,YAAc,WAGlC,6BACGK,EAAYO,KAAI,SAACnC,GAAD,OACf,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB6B,GAFb9B,EAAKM,SAMhB,uBAAMiC,SAAU,SAACC,GAAD,OA3DJ,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBtC,QAASgB,EACTuB,MAAM,IAAIC,MAAOC,cACjB3C,UAAW4C,KAAKC,SAAW,IAG7BtB,EAAmBiB,GAAYhC,MAAK,SAACuB,GACnCd,EAASD,EAAM8B,OAAOf,IACtBZ,EAAW,OAiDY4B,CAAQV,IAA/B,UACE,uBAAOW,MAAO9B,EAAS+B,SAAU,SAACZ,GAAD,OA9CbC,EA8CqCD,EA7C7Da,QAAQC,IAAIb,EAAMc,OAAOJ,YACzB7B,EAAWmB,EAAMc,OAAOJ,OAFD,IAACV,KA+CpB,wBAAQe,KAAK,SAASpD,UAAU,uBAAhC,yBCrDRqD,IAASC,OAAO,cAAC,EAAD,CAAKvC,MArBP,CACZ,CACEb,GAAI,EACJD,QAAS,eACTuC,KAAM,2BACNzC,WAAW,GAEb,CACEG,GAAI,EACJD,QAAS,sCACTuC,KAAM,2BACNzC,WAAW,GAEb,CACEG,GAAI,EACJD,QAAS,+DACTuC,KAAM,2BACNzC,WAAW,MAIwBwD,SAASC,eAAe,W","file":"static/js/main.3c5dd614.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? \"make not important\" : \"make important\";\r\n\r\n  return (\r\n    <li className=\"mt-1 mb-1\">\r\n      {note.content}\r\n      <button\r\n        id=\"my-button-style\"\r\n        className=\"mb-1 ms-3  p-1 btn btn-outline-primary \"\r\n        onClick={() => toggleImportance(note.id)}\r\n      >\r\n        {label}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nexport default Note;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll: getAll,\r\n  create: create,\r\n  update: update,\r\n};\r\n","import React from \"react\";\nimport Note from \"./components/Note\";\nimport { useState, useEffect } from \"react\";\nimport noteService from \"./services/notes\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        alert(`the note '${note.content}' was already deleted from server`);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  return (\n    <div className=\"ms-4 mt-3\">\n      <h1>Notes</h1>\n      <div>\n        <button\n          className=\"mb-3 mt-2\n          btn btn-primary\"\n          onClick={() => setShowAll(!showAll)}\n        >\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={toggleImportanceOf}\n          />\n        ))}\n      </ul>\n      <form onSubmit={(e) => addNote(e)}>\n        <input value={newNote} onChange={(e) => handleNoteChange(e)} />\n        <button type=\"submit\" className=\"ms-3 btn btn-success\">\n          Save\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst notes = [\n  {\n    id: 1,\n    content: \"HTML is easy\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  },\n  {\n    id: 2,\n    content: \"Browser can execute only JavaScript\",\n    date: \"2019-05-30T18:39:34.091Z\",\n    important: false,\n  },\n  {\n    id: 3,\n    content: \"GET and POST are the most important methods of HTTP protocol\",\n    date: \"2019-05-30T19:20:14.298Z\",\n    important: true,\n  },\n];\n\nReactDOM.render(<App notes={notes} />, document.getElementById(\"root\"));\n"],"sourceRoot":""}